
desesc: Dromajo Based ESESC

-------------------------
1-Code Cleanup towards C++17 style

=Create unit tests

 Major blocks should have unit tests

 E.g: FetchEngine or ExecuteEngine....

 but also some simpler tests for smaller blocks covering corner cases

=Fix all the asan leaks

There should be no warning/error from asan

```
bazel build -c dbg --config asan //main:desesc
./bazel-bin/main/desesc -c conf/desesc.toml
```

=Modernize memory management:

 -Remove most (all?) the const char *str, and use std::string or std::string_view
 -Remove malloc/new/delete (use string, vector, std::shared_ptr, std::unique_ptr)

 -Deprecate the pool: Use new/delete, then valgrind can be used to detect
 memory leaks (no need for in-class check for leaks)

=Cleanup callback

 The code is based on esesc (C++ from 2000 without lambdas/std::function). Use
 something closer to LiveHD tasks queue syntax.

=remove estl.h

 Use abseil flat_hash_map or flat_hash_set

 btree_map if needed

=No Uppercase C++ file

 Rename class name to avoid CamelCase to Non_camel_case
 Rename file name from CamelCase.h to Non_camel_case.hpp and Non_camel_case.cpp

=Make Config and name match with a "cfg_" starting

E.g:

   btbHistorySize = Config::get_integer(section,"btb_history_size");

Should become (and rename any variable use/declaration)

   cfg_btb_history_size = Config::get_integer(section,"btb_history_size");

=Remove typedef

 Most are useless with new C++17, but if needed (really? auto should avoid it), use an "using" instead

=FIX/Cleanup LDBP

 The code is messy and it is not updated to the latest desesc

=Create like PortGeneric/MemObj

 should return a std::uniqe_ptr not a raw pointer.

-------------------------
2-Performance reporting

=FIX the configuration dump (currently it is not right)

=Modern report.pl (report.py? or report.rb?)

 Read the toml and the generated desesc.?????? to summarize performace line report.pl used to

=pipeview

 https://github.com/shioyadan/Konata

